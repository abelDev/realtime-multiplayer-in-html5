<!DOCTYPE html>
<HTML lang="en"><HEAD>
<META charset="utf-8">
<META name="viewport" content="width=620"><TITLE>Internal HTML 5 Chat Service</TITLE>
<LINK rel="stylesheet" href="HTML5%20Demo%20Web%20Socket_files/html5demos.css">
<SCRIPT src="HTML5%20Demo%20Web%20Socket_files/h5utils.js"></SCRIPT>

<META name="GENERATOR" content="MSHTML 9.00.8112.16450"></HEAD>
<BODY><SECTION id="wrapper">
<HEADER>
<H1>Internal HTML 5 Chat Service</H1></HEADER>
<STYLE>
#chat { width: 97%; }
.them { font-weight: bold; }
.them:before { content: 'them '; color: #bbb; font-size: 14px; }
.you { font-style: italic; }
.you:before { content: 'you '; color: #bbb; font-size: 14px; font-weight: bold; }
#log {
  overflow: auto;
  max-height: 300px;
  list-style: none;
  padding: 0;
/*  margin: 0;*/
}
#log li {
  border-top: 1px solid #ccc;
  margin: 0;
  padding: 10px 0;
}
</STYLE>
<ARTICLE>
<FORM><INPUT id="chat" type="text" 
placeholder="type and press enter to chat"></FORM>
<P id="status">Not connected</P>
<P>Users connected: <SPAN id="connected">0</SPAN></P>
<P>To test, open two windows with Web Socket support, type a message above and 
press return.</P>
<UL id="log"></UL></ARTICLE>
<SCRIPT>
// let's invite Firefox to the party.
if (window.MozWebSocket) {
  window.WebSocket = window.MozWebSocket;
}

function openConnection() {
  // uses global 'conn' object
  if (conn.readyState === undefined || conn.readyState > 1) {
    conn = new WebSocket('ws://rod156.homedns.org:8001');    
    conn.onopen = function () {
      state.className = 'success';
      state.innerHTML = 'Socket open';
    };

    conn.onmessage = function (event) {
      // console.log(event.data);
      var message = event.data; //JSON.parse(event.data);
      if (!(/^\d+$/).test(message)) {
        log.innerHTML = '<li class="them">' + message.replace(/[<>&]/g, function (m) { return entities[m]; }) + '</li>' + log.innerHTML;
      } else {
        connected.innerHTML = message;
      }
    };
    
    conn.onclose = function (event) {
      state.className = 'fail';
      state.innerHTML = 'Socket closed';
    };
  }
}

var connected = document.getElementById('connected'),
    log = document.getElementById('log'),
    chat = document.getElementById('chat'),
    form = chat.form,
    conn = {},
    state = document.getElementById('status'),
    entities = {
      '<' : '&lt;',
      '>' : '&gt;',
      '&' : '&amp;'
    };

if (window.WebSocket === undefined) {
  state.innerHTML = 'Sockets not supported';
  state.className = 'fail';
} else {
  state.onclick = function () {
    if (conn.readyState !== 1) {
      conn.close();
      setTimeout(function () {
        openConnection();
      }, 250);
    }
  };
  
  addEvent(form, 'submit', function (event) {
    event.preventDefault();

    // if we're connected
    if (conn.readyState === 1) {
      conn.send(JSON.stringify(chat.value));
      log.innerHTML = '<li class="you">' + chat.value.replace(/[<>&]/g, function (m) { return entities[m]; }) + '</li>' + log.innerHTML;
      
      chat.value = '';
    }
  });

  openConnection();  
}

</SCRIPT>
<SCRIPT src="HTML5%20Demo%20Web%20Socket_files/prettify.packed.js"></SCRIPT>

<SCRIPT>
try {
var pageTracker = _gat._getTracker("UA-1656750-18");
pageTracker._trackPageview();
} catch(err) {}</SCRIPT>
</BODY></HTML>
